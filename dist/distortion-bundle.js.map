{"version":3,"sources":["webpack:///webpack/bootstrap 8d8a6763c0b236d21a1b","webpack:///./src/js/distortion.js","webpack:///./src/js/webgl-util/webgl.js","webpack:///./src/shader/distoration.frag","webpack:///./src/shader/vertex.vert"],"names":["WebGL","canvas","document","getElementById","gl","initGL","program","createProgram","time","getUniformLocation","resolution","uniform2f","width","height","textureCoords","getAttribLocation","position","pointSize","textures","vertices","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","positionBuffer","drawArrays","TRIANGLES","bindLoadedImage","img","createTexture","draw","TRIANGLE_STRIP","loadImage","curTime","lastTime","elapsed","requestAnimationFrame","delta","step","uniform1f","getContext","createShader","options","contexts","context","some","name","e","body","classList","add","enable","DEPTH_TEST","viewport","clearColor","type","shaderScript","shader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","vertexScript","fragScript","vertexShader","fragShader","attachShader","linkProgram","useProgram","linked","getProgramParameter","LINK_STATUS","console","info","lastError","getProgramInfoLog","deleteProgram","source","wrap","CLAMP_TO_EDGE","texture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","src","imageLoadedFunc","Image","addEventListener","call","crossOrigin"],"mappings":"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","file":"distortion-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8d8a6763c0b236d21a1b","import * as WebGL from './webgl-util/webgl.js';\n\nimport frag from '../shader/distoration.frag';\nimport vertex from '../shader/vertex.vert';\n\n\nconst canvas = document.getElementById('distortion');\n\nconst gl = WebGL.initGL(canvas);\nconst program = WebGL.createProgram(gl, vertex, frag);\n\nconst time = gl.getUniformLocation(program, 'u_time');\nconst resolution    = gl.getUniformLocation(program, 'u_resolution');\ngl.uniform2f(resolution, canvas.width, canvas.height);\nconst textureCoords = gl.getAttribLocation(program, 'a_textureCoords');\nconst position      = gl.getAttribLocation(program, 'a_position');\nconst pointSize     = gl.getAttribLocation(program, 'a_pointSize');\n\nconst textures = [\n  0, 0,\n  1, 0,\n  0, 1,\n  1, 1,\n];\n\nconst vertices = [\n  -0.8, -0.8,\n  0.8, -0.8,\n  -0.8, 0.8,\n  0.8, 0.8,\n];\n\nconst buffer = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, buffer);\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textures), gl.STATIC_DRAW);\n\ngl.enableVertexAttribArray(textureCoords);\ngl.vertexAttribPointer(textureCoords, 2, gl.FLOAT, false, 0, 0);\n\n\nconst positionBuffer = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n\ngl.enableVertexAttribArray(position);\ngl.vertexAttribPointer(position, 2, gl.FLOAT, false, 0, 0);\ngl.drawArrays(gl.TRIANGLES, 0, 4);\n\n\nconst bindLoadedImage = (gl) => (img) => {\n\tWebGL.createTexture(gl, img);\n\tdraw(0);\n\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\n\nWebGL.loadImage(\n\t'../../avatar.jpg',\n\tbindLoadedImage(gl)\n);\n\nlet curTime = 0;\nlet lastTime = 0;\n\nfunction draw(elapsed) {\n\trequestAnimationFrame(draw);\n\t\n\tlet delta = elapsed - lastTime;\n\tlastTime = elapsed;\n\n\tlet step = delta / (1000 / 60);\n\tcurTime += step;\n\n\tgl.uniform1f(time, curTime);\n\n\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/distortion.js","export function getContext(canvas, options = {}) {\n  let contexts = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n\n  contexts.some(name => {\n    try {\n      context = canvas.getContext(name,options);\n    } catch(e) {};\n\n    return context != null;\n  });\n\n  if(context == null){\n    document.body.classList.add(\"no-webgl\");\n  }\n\n  return context;\n}\n\nexport function initGL(canvas) {\n  const gl = getContext(canvas);\n  // const width = window.innerWidth;\n  // const height = window.innerHeight;\n  \n  // canvas.width = width;\n  // canvas.height = height;\n  gl.enable(gl.DEPTH_TEST);\n  gl.viewport(0,0, canvas.width, canvas.height);\n  gl.clearColor(0, 1, 1, 1);\n  \n  // window.addEventListener('resize', function() {\n  //   gl.viewport(0,0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  // });\n  \n  return gl;\n}\n\nexport function createShader(gl, type, shaderScript) {\n  var shader;\n\n  switch(type) {\n    case 'fragment':\n      shader = gl.createShader(gl.FRAGMENT_SHADER);\n      break;\n    case 'vertex':\n      shader = gl.createShader(gl.VERTEX_SHADER);\n      break;\n  }\n\n  gl.shaderSource(shader, shaderScript);\n  gl.compileShader(shader);\n  \n  return shader;\n}\n\nexport function createProgram(gl, vertexScript, fragScript) {\n  const vertexShader = createShader(gl, 'vertex', vertexScript);\n  const fragShader = createShader(gl, 'fragment', fragScript);\n  const program = gl.createProgram();\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragShader);\n  gl.linkProgram(program);\n  gl.useProgram(program);\n\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n  console.info('current program linked status:', linked);\n\n  if (!linked) {\n      var lastError = gl.getProgramInfoLog(program);\n      \n      gl.deleteProgram(program);\n      return null;\n  }\n\n  return program;\n}\n\n\nexport function createTexture(gl, source, wrap = null){\n  if (wrap == null) wrap = gl.CLAMP_TO_EDGE;\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);  \n  // Set the parameters so we can render any size image.\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n  return texture;\n}\n\n\nexport function loadImage(src, imageLoadedFunc) {\n  const img = new Image();\n\n  img.addEventListener('load', function() {\n    imageLoadedFunc.call(this, img);\n  });\n  img.crossOrigin = '';\n  img.src = src;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/webgl-util/webgl.js","module.exports = \"precision mediump float;\\n\\nvarying vec2 v_textureCoords;\\n\\nuniform float u_time; // pass time to animate.\\nuniform sampler2D u_sampler;\\nuniform vec2 u_resolution;\\n\\n\\nvec2 pixel() {\\n  return 1.0 / u_resolution;\\n}\\n\\n// make position distortion by sin func.\\nfloat distortion(float point,float freq, float speed) {\\n  return sin(point * freq + ((3.1415/2.0) * u_time * speed));\\n}\\n\\nvec2 distortions(vec2 pos) {\\n\\tvec2 intensity = vec2(2.0,1.0) * pixel();\\n\\n  vec2 waves = vec2(\\n    distortion(pos.y,190.0,0.35),\\n    distortion(pos.x,100.0,0.4)\\n  );\\n\\n  return pos + (waves * intensity * 1.0);\\n}\\n\\nvoid main() {\\n\\tvec2 distortions = distortions(v_textureCoords);\\n\\n\\tvec4 testColor = vec4(1.0,0.0,0.0,1.0);\\n\\n\\tgl_FragColor = texture2D(u_sampler, distortions);\\n\\t// gl_FragColor = testColor;\\n\\t// gl_PointSize = 10.0;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shader/distoration.frag\n// module id = 2\n// module chunks = 0","module.exports = \"attribute vec2 a_textureCoords;\\nattribute vec4 a_position;\\n\\n\\n\\nvarying vec2 v_textureCoords;\\n\\nattribute float a_pointSize;\\n\\n// convert position to mapping -1 ~ 1\\n// vec2 convertCoords(vec2 position, vec2 resolution) {\\n// \\tvec2 toOne = (position / resolution) * 2.0;\\n// \\tvec2 clipSpace = toOne - 1.0;\\n\\n// \\treturn clipSpace;\\n// }\\n\\nvoid main() {\\n\\t// vec2 converted = convertCoords(a_position, u_resolution);\\n\\t\\n\\tgl_Position = a_position;\\n\\tgl_PointSize = 10.0;\\n\\tv_textureCoords = a_textureCoords;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shader/vertex.vert\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}